user www-data;
worker_processes auto;
pid /run/nginx.pid;
error_log /var/log/nginx/error.log;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
}

http{
    server {
        listen 80;
	listen 443 ssl;
        server_name localhost;
        resolver                127.0.0.11;

        location / {
            #rewrite_by_lua_file '/etc/nginx/get_req_body.lua';
            auth_request /auth-proxy;
            auth_request_set $k8s_owner $upstream_http_x_k8s_owner;
            proxy_pass http://127.0.0.1:5000/k8s_api/;
            proxy_pass_request_headers on;
	    proxy_set_header Authorization "";
            proxy_set_header X-K8s-Owner $k8s_owner;
            proxy_http_version 1.1;
            #proxy_set_header Upgrade $http_upgrade;
            #proxy_set_header Connection $http_connection;
        }
        location ~ ^/api/(.*)/exec$ {
            rewrite_by_lua_file '/etc/nginx/get_req_body.lua';
            auth_request /auth-proxy;
            proxy_pass http://127.0.0.1:8002;
            proxy_pass_request_headers on;
	    proxy_set_header Authorization "";
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $http_connection;
        }
        location = /auth-proxy {
            internal;
            proxy_pass http://127.0.0.1:5000/auth/;
            proxy_pass_request_headers on;
            proxy_set_header X-Original-IP $remote_addr;
	    proxy_set_header X-Original-Uri $request_uri;
	    proxy_set_header X-Original-Method $request_method;
	    proxy_pass_request_body off;
	    proxy_set_header Content-Length "";
	}
	ssl_certificate /etc/nginx/ssl/server-chain.crt;
	ssl_certificate_key /etc/nginx/ssl/server.key;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_prefer_server_ciphers on;
	ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
	ssl_ecdh_curve secp384r1;
	ssl_session_cache shared:SSL:10m;
	ssl_session_tickets off;
	#ssl_stapling on;
	#ssl_stapling_verify on;
	# Disable preloading HSTS for now.  You can use the commented out header line that includes
	# the "preload" directive if you understand the implications.
	#add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
	add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
	add_header X-Frame-Options DENY;
	add_header X-Content-Type-Options nosniff;
	ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    }
}
